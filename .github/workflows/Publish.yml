name: Publish and Deploy

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: 'lts/*'
      s3-path:
        description: 'Path within the S3 bucket'
        required: false
        type: string
      publish-to-npm:
        description: 'Whether to publish to NPM'
        required: false
        type: boolean
        default: false
      file-to-upload:
        description: 'Specific file to upload to S3'
        required: false
        type: string
  pull_request:
    types:
      - closed
  push:
    branches:
      - main

jobs:
  publish_and_deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version || 'lts/*' }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Get Package Version
        id: package-version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Run security audit
        if: ${{ inputs.publish-to-npm || github.event_name == 'push' }}
        run: npm audit --audit-level=critical

      - name: Publish to NPM
        if: ${{ inputs.publish-to-npm || github.event_name == 'push' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Configure AWS Credentials
        if: ${{ inputs.s3-path != '' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload to S3
        if: ${{ inputs.s3-path != '' && inputs.file-to-upload != '' }}
        run: |
          FILE_NAME=$(basename "${{ inputs.file-to-upload }}")
          S3_BUCKET="nr-downloads-main"
          aws s3 cp "${{ inputs.file-to-upload }}" s3://${S3_BUCKET}/${{ inputs.s3-path }}/${FILE_NAME}.${{ env.PACKAGE_VERSION }}.min.js
          aws s3 cp "${{ inputs.file-to-upload }}" s3://${S3_BUCKET}/${{ inputs.s3-path }}/${FILE_NAME}.latest.min.js