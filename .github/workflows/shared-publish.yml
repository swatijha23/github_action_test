name: Shared Publish
description: |
  This workflow is designed to build and publish a Node.js package to NPM.
  It includes steps for setting up Node.js, installing dependencies, building the project,
  running security audits, and publishing the package.
  The workflow is triggered on pull requests and can be reused in other workflows.
  It also includes a semantic release step to automate versioning and changelog generation.
  The workflow uses the `semantic-release` package to handle versioning and publishing.
  The workflow is designed to be reusable and can be called from other workflows.
  It accepts inputs for the Node.js version and audit level, allowing customization for different projects.
  The workflow also includes permissions for writing to contents, packages, issues, and pull requests.
  The workflow is designed to be used in a CI/CD pipeline for Node.js projects.
  It is a good practice to use this workflow in conjunction with other workflows for testing and linting.

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: 'lts/*'
      audit-level:
        description: 'Audit level for npm security checks'
        required: false
        type: string
        default: 'critical'
    secrets:
      npm-token:
        description: 'NPM token for publishing'
        required: true

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs['node-version'] }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # - name: Lint code
      #   run: npm run lint  # Run linter (e.g., ESLint)  

      # - name: Check formatting
      #   run: npm run format:check  # Verify code formatting (e.g., Prettier)  

      - name: Build project
        run: npm run build

      # - name: Check types
      #   run: npm run type-check  # Type-check with TypeScript if applicable  

      - name: Run security audit
        run: npm audit --audit-level=${{ inputs['audit-level'] }}

      # - name: Run tests
      #   run: npm run test -- --coverage  # Run tests with coverage report

      - name: Publish to NPM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.npm-token }}
        run: npx semantic-release



# name: Publish

# on:
#   push:
#     branches:
#       - main
#     tags:
#       - 'v*.*.*'  # Matches semantic versioning tags like v1.0.0, v2.1.3, etc..

# permissions:
#   contents: write
#   packages: write
#   issues: write
#   pull-requests: write

# jobs:
#   build-and-publish:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 'lts/*'  # Use the latest LTS version
#           cache: 'npm'  # Cache npm dependencies

#       - name: Install dependencies
#         run: npm ci  # Faster and cleaner dependency installation

#       # - name: Lint code
#       #   run: npm run lint  # Run linter (e.g., ESLint)

#       # - name: Check formatting
#       #   run: npm run format:check  # Verify code formatting (e.g., Prettier)

#       - name: Build project
#         run: npm run build

#       # - name: Check types
#       #   run: npm run type-check  # Type-check with TypeScript if applicable

#       - name: Run security audit
#         run: npm audit --audit-level=critical  # Focus on critical vulnerabilities

#       # - name: Run tests
#       #   run: npm run test -- --coverage  # Run tests with coverage report

#       - name: Publish to NPM
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#         run: npx semantic-release 